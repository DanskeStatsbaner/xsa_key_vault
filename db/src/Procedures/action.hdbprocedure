PROCEDURE "XSA_KEY_VAULT.db.Procedures::action"(
		IN APP_NAME NVARCHAR(100),
		IN ACTION VARCHAR(5000),
		IN UUID VARCHAR(100),
		IN JWT VARCHAR(5000),
		OUT OUTPUT table (
			RESPONSE NVARCHAR(5000),
			STATE VARCHAR(5000)
		)
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
BEGIN

	DECLARE JSON_RESPONSE NCLOB;
	DECLARE FAILED NVARCHAR(5000);
	DECLARE ENVIRONMENT NVARCHAR(4);
	
	SELECT LOWER(SYSTEM_ID) INTO ENVIRONMENT FROM "XSA_KEY_VAULT.db.Synonyms::M_DATABASE";

	CALL "XSA_KEY_VAULT.db.Procedures::bash"(COMMAND => 'curl -s https://' || REPLACE(LOWER(APP_NAME), '_', '-') || '.xsabi' || ENVIRONMENT || '.dsb.dk:30033/' || ACTION || '?uuid=' || UUID || ' -X POST -H "Content-Type: application/json" -H "Authorization: Bearer '  || JWT || '"', OUTPUT => RESPONSE);
	
	SELECT STRING_AGG(RESPONSE, '\n') INTO JSON_RESPONSE FROM :RESPONSE;
	
	-- DEBUG OUTPUT OF BASH PROCEDURE 
	CALL "XSA_KEY_VAULT.db.Procedures::humio"(SUBSTRING(JSON_RESPONSE, 0, 3000));
	-- DEBUG END
	
	CALL "XSA_KEY_VAULT.db.Procedures::humio"(MESSAGE => JSON_RESPONSE, LOG_LEVEL => 'DEBUG');
	
	RESPONSE_TABLE = SELECT JSON_VALUE(JSON_RESPONSE, '$.response') AS RESPONSE, JSON_VALUE(JSON_RESPONSE, '$.state') AS STATE, JSON_VALUE(JSON_RESPONSE, '$.detail') AS DETAIL FROM "XSA_KEY_VAULT.db.Synonyms::DUMMY";
	
	SELECT DETAIL INTO FAILED FROM :RESPONSE_TABLE;
	
	IF FAILED IS NOT NULL THEN
		CALL "XSA_KEY_VAULT.db.Procedures::error"(FAILED);
	END IF;
	
	OUTPUT = SELECT RESPONSE, STATE FROM :RESPONSE_TABLE;

END